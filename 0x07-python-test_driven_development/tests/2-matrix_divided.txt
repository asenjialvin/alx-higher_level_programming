#!/usr/bin/python3
''' This is the test module for matrix_divided() '''

==============
matrix_divided
==============

This function divides all elements of a matrix.
All elements will be divided by div, rounded to 2 decimal places


``matrix_divided()`` returns a new matrix with the new values.

::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[4, 6, 8], [2, 10, 12]], 2)
    [[2.0, 3.0, 4.0], [1.0, 5.0, 6.0]]

    >>> matrix_divided([[30.5, 29.63, 50], [10, 15, 5]], 5)
    [[6.1, 5.93, 10.0], [2.0, 3.0, 1.0]]

    >>> matrix_divided([[2, 4, 6], [22, 62, 68], [11, 44, 12]], 2)
    [[1.0, 2.0, 3.0], [11.0, 31.0, 34.0], [5.5, 22.0, 6.0]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[4, 6, "dog"], [2, 16, 12]], 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[30.5, 29.63, 50], [10, 15, 5]], "ant")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided([[2, 4, 6], [22, 48, 62, 68]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[2, 4, 6], [22, 48, 62, 68]], )
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided([] , 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'matrix'

    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[], []], 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
